(fate_version 1)

(global string test_name)

(set test_name ( ADD ELEMENT ))

(global (list int) li0)
(global (list int) li1)

(set li0 (add_element -1 li0))
(set li0 (add_element 0 li0))
(set li0 (add_element 1 li0))
(set li0 (add_element 2 li0))
(set li0 (add_element 3 4 5 li0))
(set li0 (add_element 6 li0))

(add_element! -1 li1)
(add_element! 0 li1)
(add_element! 1 li1)
(add_element! 2 3 4 li1)
(add_element! 5 li1)
(add_element! 6 li1)

(assert (= (var li0) (var li1)) [FAILED] (var test_name) equality.)

(assert (= (var li0.0) (var li1.0) -1) [FAILED] (var test_name) at 0: (var li0.0), (var li1.0).)
(assert (= (var li0.1) (var li1.1) 0) [FAILED] (var test_name) at 1: (var li0.1), (var li1.1).)
(assert (= (var li0.2) (var li1.2) 1) [FAILED] (var test_name) at 2: (var li0.2), (var li1.2).)
(assert (= (var li0.3) (var li1.3) 2) [FAILED] (var test_name) at 3: (var li0.3), (var li1.3).)
(assert (= (var li0.4) (var li1.4) 3) [FAILED] (var test_name) at 4: (var li0.4), (var li1.4).)
(assert (= (var li0.5) (var li1.5) 4) [FAILED] (var test_name) at 5: (var li0.5), (var li1.5).)
(assert (= (var li0.6) (var li1.6) 5) [FAILED] (var test_name) at 6: (var li0.6), (var li1.6).)
(assert (= (var li0.7) (var li1.7) 6) [FAILED] (var test_name) at 7: (var li0.7), (var li1.7).)

(global (list int) ali0)
(global (list int) ali1)

(set ali0 (add_element 6 (range -1 5 1)))
(set ali1
   (add_element 6
      (add_element 5
         (add_element 4
            (add_element 1 2 3
               (add_element 0
                  (add_element -1 ali1)
               )
            )
         )
      )
   )
)

(assert (= (var li0) (var li1) (var ali0) (var ali1)) [FAILED] (var test_name) equality 2.)

(global (set int) si0)
(global (set int) si1)
(global (ptr (set int)) si_ptr)

(set si_ptr (ptr si1))

(set si0 (add_element 6 si0))
(set si0 (add_element 0 si0))
(set si0 (add_element 1 4 -1 si0))
(set si0 (add_element 5 si0))
(set si0 (add_element 3 si0))
(set si0 (add_element 2 si0))

(add_element! 4 si1)
(add_element! 0 (at (ptr si1)))
(add_element! 3 -1 2 si1)
(add_element! 6 si1)
(add_element! 1 (at si_ptr))
(add_element! 5 si1)

(assert (= (var li0) (var li1) (var ali0) (var ali1) (var si0) (var si1)) [FAILED] (var test_name) equality 3.)

(set si0 (add_element 0 si0))
(set si0 (add_element 4 si0))
(set si0 (add_element 6 5 3 si0))
(set si0 (add_element -1 si0))
(set si0 (add_element 2 si0))
(set si0 (add_element 1 si0))

(add_element! 4 si1)
(add_element! 1 0 6 si1)
(add_element! -1 si1)
(add_element! 3 si1)
(add_element! 2 si1)
(add_element! 5 si1)

(assert (= (var li0) (var li1) (var ali0) (var ali1) (var si0) (var si1)) [FAILED] (var test_name) equality 4.)

[COMPLETED] (var test_name)

(end)
