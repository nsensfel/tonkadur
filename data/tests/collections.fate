(fate_version 1)

(require include/data_types.fate)

(declare_variable int_list int_list_a)
(declare_variable int_list int_list_b)
(declare_variable int_list int_list_c)

(declare_variable int_set int_set_a)
(declare_variable int_set int_set_b)
(declare_variable int_set int_set_c)

(assert (= 0 (size (var int_list_a))) FAILED: size list A)
(assert (= 0 (size (var int_set_a))) FAILED: size set A)

(add_element 3 int_list_a)
(add_element 3 int_set_a)
(assert (= 1 (size (var int_list_a))) FAILED: size list B)
(assert (= 1 (size (var int_set_a))) FAILED: size set B)

(add_element 3 int_list_a)
(add_element 3 int_set_a)
(assert (= 2 (size (var int_list_a))) FAILED: size list C)
(assert (= 1 (size (var int_set_a))) FAILED: size set C)

(remove_one 3 int_list_a)
(remove_one 3 int_set_a)
(assert (= 1 (size (var int_list_a))) FAILED: size list D)
(assert (= 0 (size (var int_set_a))) FAILED: size set D)

(remove_one 3 int_list_a)
(remove_one 3 int_set_a)
(assert (= 0 (size (var int_list_a))) FAILED: size list E)
(assert (= 0 (size (var int_set_a))) FAILED: size set E)

(remove_one 3 int_list_a)
(remove_one 3 int_set_a)
(assert (= 0 (size (var int_list_a))) FAILED: size list F)
(assert (= 0 (size (var int_set_a))) FAILED: size set F)

(add 1 int_list_a)
(add 2 int_list_a)
(add 3 int_list_a)
(add 4 int_list_a)
(add 5 int_list_a)
(add 6 int_list_a)
(add 7 int_list_a)
(add 8 int_list_a)
(add 9 int_list_a)
(add 10 int_list_a)

(add 3 int_set_a)
(add 5 int_set_a)
(add 2 int_set_a)
(add 8 int_set_a)
(add 4 int_set_a)
(add 6 int_set_a)
(add 10 int_set_a)
(add 1 int_set_a)
(add 9 int_set_a)
(add 7 int_set_a)

(add 3 int_set_a)
(add 5 int_set_a)
(add 2 int_set_a)
(add 8 int_set_a)
(add 4 int_set_a)
(add 6 int_set_a)
(add 10 int_set_a)
(add 1 int_set_a)
(add 9 int_set_a)
(add 7 int_set_a)

(assert (= 10 (size (var int_list_a))) FAILED: size list G)
(assert (= 10 (size (var int_set_a))) FAILED: size set G)

(add 1 int_list_a)
(add 2 int_list_a)
(add 3 int_list_a)
(add 4 int_list_a)
(add 5 int_list_a)
(add 6 int_list_a)
(add 7 int_list_a)
(add 8 int_list_a)
(add 9 int_list_a)
(add 10 int_list_a)

(assert (= 20 (size (var int_list_a))) FAILED: size list H)

(remove_all 4 int_list_a)

(assert (= 18 (size (var int_list_a))) FAILED: size list I)

(remove_element_at 0 int_list_a)
(assert (= 17 (size (var int_list_a))) FAILED: size list J)

(remove_all 1 int_list_a)
(assert (= 16 (size (var int_list_a))) FAILED: size list K)

(clear int_list_a)
(clear int_set_a)
(assert (= 0 (size (var int_list_a))) FAILED: size list L)
(assert (= 0 (size (var int_set_a))) FAILED: size set L)

(add 1 int_list_a)
(add 2 int_list_a)
(add 3 int_list_a)
(add 4 int_list_a)
(add 5 int_list_a)
(add 6 int_list_a)
(add 7 int_list_a)
(add 8 int_list_a)
(add 9 int_list_a)
(add 10 int_list_a)
(add 10 int_list_a)
(add 9 int_list_a)
(add 8 int_list_a)
(add 7 int_list_a)
(add 6 int_list_a)
(add 5 int_list_a)
(add 4 int_list_a)
(add 3 int_list_a)
(add 2 int_list_a)
(add 1 int_list_a)

(remove_at 0 int_list_a)
(reverse int_list_a)
(remove_at 0 int_list_a)

(add 1 int_list_b)
(add 2 int_list_b)
(add 3 int_list_b)
(add 4 int_list_b)
(reverse int_list_b)

(assert (= 18 (size (var int_list_a))) FAILED: size list M)

(remove_all 1 int_list_a)

(assert (= 18 (size (var int_list_a))) FAILED: size list N)

;;(assert (= 2 (access int_list_a 0)) FAILED: size list M_BIS (access int_list_a 0))
;;(assert (= 5 (access int_list_a 3)) FAILED: size list N_BIS (access int_list_a 3))
;;(assert (= 2 (count 10 int_list_a)) FAILED: size list O)
;;(assert (= 0 (count 99 int_list_a)) FAILED: size list P)

(assert (false) test a)
(index_of 3 int_list_a)
(assert (false) test b)
(index_of 3 int_list_a)
(assert (false) test c)
(index_of 3 int_list_a)

;;(assert (= 1 (index_of 3 int_list_a)) FAILED: size list Q (index_of 2 int_list_a))
;;(assert (= 1 (index_of 3 int_list_a)) FAILED: size list R (index_of 3 int_list_a))
;;(assert (= -1 (index_of 333 int_list_a)) FAILED: size list S)
;;(assert (not (is_member 99 int_list_a)) FAILED: size list T)
;;(assert (is_member 10 int_list_a) FAILED: size list U)

(end)
